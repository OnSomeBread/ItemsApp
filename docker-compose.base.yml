services:
  backend:
    build:
      context: backend
    environment:
      - REDIS_URL=${REDIS_URL}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    expose: 
      - "8000"
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  frontend:
    build:
      context: frontend

  db:
    image: postgres:17-alpine
    restart: unless-stopped
    expose: 
      - "5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:alpine3.22
    command: ["redis-server", "--save", "", "--appendonly", "no", "--hz", "1"]
    restart: unless-stopped
    expose: 
      - "6379"

volumes:
  pgdata:
