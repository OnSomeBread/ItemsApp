services:
  backend:
    build:
      context: backend
    environment:
      - REDIS_URL=${REDIS_URL}
      - DATABASE_URL=${DATABASE_URL}
    expose:
      - "8000"
    ports:
      - "8000:8000"
    volumes:
      - ./most_recent_items.json:/ItemsApp/most_recent_items.json
      - ./most_recent_tasks.json:/ItemsApp/most_recent_tasks.json
    depends_on:
      - db
      - redis

  frontend:
    build:
      context: frontend
    expose:
      - "3000"
    ports:
      - "3000:3000"
    environment:
      - HOSTNAME=0.0.0.0
      - NEXT_PUBLIC_BASE_PATH=
      - NEXT_PUBLIC_BACKEND_SERVER=http://backend:8000

  db:
    image: postgres:17-alpine
    restart: unless-stopped
    expose:
      - "5432"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:alpine3.22
    command: ["redis-server", "--save", "", "--appendonly", "no", "--hz", "1"]
    restart: unless-stopped
    expose:
      - "6379"
    ports:
      - "6379:6379"

volumes:
  pgdata:
