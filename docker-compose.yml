services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.dev
    volumes:
      - ./backend:/ItemsApp
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    #command: ["sh", "wait-for-postgres.sh", "db", "python", "manage.py", "runserver", "0.0.0.0:8000"]
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
  frontend:
    build:
      dockerfile: frontend/Dockerfile.dev
      context: .
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/ItemsApp
      - /ItemsApp/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true

  db:
    image: postgres:alpine
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

volumes:
  pgdata:
